#!/usr/bin/env bash

# edit dnf config
sudo sh -c 'echo "fastestmirror=True" >>/etc/dnf/dnf.conf'
sudo sh -c 'echo "max_parallel_downloads=10" >>/etc/dnf/dnf.conf'
sudo sh -c 'echo "defaultyes=True" >>/etc/dnf/dnf.conf'

sudo dnf -y upgrade --refresh

# install zsh
if ! zsh --version; then
    sudo dnf -y install zsh
fi
sudo dnf install -y util-linux-user
chsh -s $(which zsh)
echo SHELL: $SHELL

# install g++ (needed for treesitter compilations)
sudo dnf -y install gcc-c++

# install rust and cargo
sudo dnf -y install rust cargo
# add cargo to PATH to be able to run locally compiled binaries
echo 'export PATH='$HOME/.cargo/bin':$PATH' >>~/.zshrc_local

# also add .local to PATH
echo 'export PATH='$HOME/.local/bin':$PATH' >>~/.zshrc_local

# install fnm for managing node versions
curl -fsSL https://fnm.vercel.app/install | bash -s -- --install-dir "$HOME/.fnm" --skip-shell
echo '' >>~/.zshrc_local
echo '# fnm' >>~/.zshrc_local
echo 'export PATH='$HOME/.fnm':$PATH' >>~/.zshrc_local
echo 'eval "`fnm env`"' >>~/.zshrc_local
source ~/.zshrc_local

# install node
fnm install 18.7.0

# install recommended nerd font for powerlevel10k
# for more info, see:
# https://github.com/romkatv/powerlevel10k#meslo-nerd-font-patched-for-powerlevel10k
mkdir -p ~/.local/share/fonts
cd ~/.local/share/fonts
curl -fLo "MesloLGS NF Regular.ttf" https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf
curl -fLo "MesloLGS NF Bold.ttf" https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf
curl -fLo "MesloLGS NF Italic.ttf" https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf
curl -fLo "MesloLGS NF Bold Italic.ttf" https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf
cd -

# install neovim
# sudo dnf install -y neovim python3-neovim
# npm install -g neovim
# install neovim from source so it doesnt get auto-upgraded by dnf (breaking my config)
mkdir -p ~/sandbox
cd ~/sandbox
git clone https://github.com/neovim/neovim.git 
# install prereqs before building
sudo dnf -y install ninja-build cmake gcc make unzip gettext curl
# checkout neovim 0.9.5 (commit I know works with my config)
git checkout 8744ee8
make CMAKE_BUILD_TYPE=RelWithDebInfo
sudo make install
cd -
# set git editor to neovim
git config --global core.editor "nvim"

# install telescop dependencies
#   (ripgrep needed by telescope live_grep)
#   (fd needed by telescope file search)
sudo dnf -y install ripgrep
sudo dnf -y install fd-find

# install lazygit (via cool other package repo, for now)
sudo dnf -y copr enable atim/lazygit -y
sudo dnf -y install lazygit

# install imwheel configuration (for faster mouse scrolling)
ln -s ~/.dotfiles/misc/.imwheelrc ~/.imwheelrc
mkdir -p ~/.config/autostart
ln -s ~/.dotfiles/misc/imwheel.desktop ~/.config/autostart/imwheel.desktop

# install vscode
sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
sudo dnf -y install code

sudo dnf -y install tree

# install dependencies for pyenv to build python
sudo dnf -y install make
sudo dnf -y install gcc
sudo dnf -y install zlib-devel
sudo dnf -y install bzip2
sudo dnf -y install bzip2-devel
sudo dnf -y install readline-devel
sudo dnf -y install sqlite
sudo dnf -y install sqlite-devel
sudo dnf -y install openssl-devel
sudo dnf -y install tk-devel
sudo dnf -y install libffi-devel
sudo dnf -y install xz-devel

# install dependencies that might be needed by poetry to compile/install project dependencies
sudo dnf -y install python3-devel
sudo dnf -y install postgresql-devel

# wayland clipboard util for neovim
sudo dnf -y install wl-clipboard

# stylua formatter for lua code (e.g. neovim config)
cargo install stylua

# install alacritty
mkdir -p ~/sandbox
cd ~/sandbox
git clone https://github.com/alacritty/alacritty.git
cd alacritty
sudo dnf -y install cmake freetype-devel fontconfig-devel libxcb-devel libxkbcommon-devel g++
# Force support for only Wayland
cargo build --release --no-default-features --features=wayland
# desktop entry
sudo cp target/release/alacritty /usr/local/bin
sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
sudo desktop-file-install extra/linux/Alacritty.desktop
sudo update-desktop-database
cd -

# make alacritty default terminal emulator
# gsettings set org.gnome.desktop.default-applications.terminal exec /usr/local/bin/alacritty 
# gsettings set org.gnome.desktop.default-applications.terminal exec-arg "--working-directory"

# to list all apps available via flatpak in fedora by default:
# flatpak remote-ls --app $REMOTE
# https://fedoramagazine.org/comparison-of-fedora-flatpaks-and-flathub-remotes/

# install screenshot app via cmd line instead of software app:
flatpak install -y org.gnome.Screenshot
# install meld diff app via cmd line instead of software app:
flatpak install -y org.gnome.Meld
# install postman
flatpak install -y com.getpostman.Postman

# set desired fedora settings here instead of via gnome settings app
gsettings set org.gnome.settings-daemon.plugins.color night-light-enabled true
gsettings set org.gnome.desktop.interface enable-hot-corners false
gsettings set org.gnome.desktop.wm.keybindings switch-applications ['<Super>Tab']
gsettings set org.gnome.desktop.wm.keybindings switch-applications-backward ['<Shift><Super>Tab']
gsettings set org.gnome.desktop.wm.keybindings switch-windows ['<Alt>Tab']
gsettings set org.gnome.desktop.wm.keybindings switch-windows-backward ['<Shift><Alt>Tab']
gsettings set org.gnome.mutter experimental-features ['scale-monitor-framebuffer']
# To enable tap-to-click on touchpad
gsettings set org.gnome.desktop.peripherals.touchpad tap-to-click true
# For intel 12th gen CPU, to remove conflict with ambient light sensor and enable backlight brightness buttons
sudo grubby --update-kernel=ALL --args="module_blacklist=hid_sensor_hub"
